@page "/school/edit"
@inject GuardianService GuardianService
@inject AddressService AddressService
@inject NavigationManager NavigationManager
@inject ISchoolDataService SchoolDataService
@using FcmsPortal.Services
@using FcmsPortal.Models
@using FcmsPortal.Enums
@using FcmsPortalUI.Services
@rendermode InteractiveServer


<h3>Edit School Information</h3>

@if (school != null)
{
    <EditForm Model="school" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        
        <div class="card mb-4">
            <div class="card-header">
                <h4>Basic Information</h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="name" class="form-label">School Name</label>
                            <InputText id="name" @bind-Value="school.Name" class="form-control" />
                        </div>

                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <InputText id="email" @bind-Value="school.Email" class="form-control" />
                        </div>

                        <div class="mb-3">
                            <label for="phone" class="form-label">Phone Number</label>
                            <InputText id="phone" @bind-Value="school.PhoneNumber" class="form-control" />
                        </div>

                        <div class="mb-3">
                            <label for="website" class="form-label">Website URL</label>
                            <InputText id="website" @bind-Value="school.WebsiteUrl" class="form-control" />
                        </div>
                    </div>

                    <div class="col-md-6 d-flex justify-content-center align-items-center">
                        <div class="school-logo-card">
                            <label class="form-label">School Logo</label>
                            <div class="school-logo-container">
                                <InputFile OnChange="HandleFileUpload" accept="image/*" class="hidden-file-input" id="fileInput" />
                                <label for="fileInput" class="logo-label">
                                    <img src="@logoUrl" alt="School Logo" class="school-logo @(string.IsNullOrEmpty(logoUrl) ? "hidden" : "")" />
                                    <i class="fa fa-school placeholder-icon @(string.IsNullOrEmpty(logoUrl) ? "" : "hidden")"></i>
                                </label>
                            </div>
                            <span class="text-muted text-center">Click to upload logo</span>
                        </div>
                    </div>

                   
                </div>
                
                <div class="row">
                   
                </div>
            </div>
        </div>
        
        <div class="card mb-4">
            <div class="card-header">
                <h4>Address</h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="street" class="form-label">Street</label>
                        <InputText id="street" @bind-Value="school.Address.Street" class="form-control" />
                    </div>
                    
                    <div class="col-md-6 mb-3">
                        <label for="city" class="form-label">City</label>
                        <InputText id="city" @bind-Value="school.Address.City" class="form-control" />
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-md-4 mb-3">
                        <label for="state" class="form-label">State</label>
                        <InputText id="state" @bind-Value="school.Address.State" class="form-control" />
                    </div>
                    
                    <div class="col-md-4 mb-3">
                        <label for="postal" class="form-label">Postal Code</label>
                        <InputText id="postal" @bind-Value="school.Address.PostalCode" class="form-control" />
                    </div>
                    
                    <div class="col-md-4 mb-3">
                        <label for="country" class="form-label">Country</label>
                        <InputText id="country" @bind-Value="school.Address.Country" class="form-control" />
                    </div>
                </div>
            </div>
        </div>
        
        <div class="mt-3">
            <button type="submit" class="btn btn-primary">Save Changes</button>
            <button type="button" class="btn btn-secondary ms-2" @onclick="Cancel">Cancel</button>
        </div>
    </EditForm>
}
else
{
    <p>Loading school information...</p>
}

@code {
    private FcmsPortal.Models.School school;
    private string logoUrl = "";

    protected override void OnInitialized()
    {
        // Load existing school data
        school = SchoolDataService.GetSchool();

        // Set existing logo URL if available
        logoUrl = school?.LogoUrl ?? "";
    }

    private async Task HandleFileUpload(InputFileChangeEventArgs e)
    {
        try
        {
            var file = e.File;
            if (file != null)
            {
                // Resize and read the file
                var resizedImageFile = await file.RequestImageFileAsync("image/jpeg", 400, 400);
                using var stream = resizedImageFile.OpenReadStream();
                using var ms = new MemoryStream();
                await stream.CopyToAsync(ms);
                var imageBytes = ms.ToArray();

                // Convert to base64 for preview
                var base64String = Convert.ToBase64String(imageBytes);
                logoUrl = $"data:image/jpeg;base64,{base64String}";

                // Update model
                school.LogoUrl = logoUrl;

                // Refresh UI
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error uploading file: {ex.Message}");
        }
    }

    private void HandleValidSubmit()
    {
        // Update school in the database
        SchoolDataService.UpdateSchool(school);

        // Redirect to school list
        NavigationManager.NavigateTo("/school");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/school");
    }
}
