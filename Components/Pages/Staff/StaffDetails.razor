@page "/staff/details/{Id:int}"
@using FcmsPortal.Models
@using FcmsPortal.Enums
@using FcmsPortalUI.Services
@using FcmsPortal.Services
@using FcmsPortalUI.Components.Pages.Shared
@inject ISchoolDataService SchoolDataService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Staff Details</PageTitle>

<div class="container">
    @if (staff == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h1>Staff Details</h1>
            <div>
                <a href="/staff/edit/@Id" class="btn btn-warning">
                    <i class="fa fa-pencil"></i> Edit
                </a>
                <a href="/staff" class="btn btn-secondary">
                    <i class="fa fa-arrow-left"></i> Back to List
                </a>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4 mb-4">
                <div class="card">
                    <div class="card-body text-center">
                        <ProfileThumbnailDetail Person="staff.Person" />
                        <h5>@staff.JobRole</h5>
                        <p class="text-muted">@staff.AreaOfSpecialization</p>
                    </div>
                </div>
            </div>

            <div class="col-md-8">
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Personal Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <h6 class="text-muted">Full Name</h6>
                                <p>@Util.GetFullName(staff.Person)</p>
                            </div>
                            <div class="col-md-6 mb-3">
                                <h6 class="text-muted">Gender</h6>
                                <p>@staff.Person.Sex</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <h6 class="text-muted">Date of Birth</h6>
                                <p>@staff.Person.DateOfBirth.ToShortDateString() (@staff.Person.Age years)</p>
                            </div>
                            <div class="col-md-6 mb-3">
                                <h6 class="text-muted">Education Level</h6>
                                <p>@staff.Person.EducationLevel</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <h6 class="text-muted">State of Origin</h6>
                                <p>@(string.IsNullOrEmpty(staff.Person.StateOfOrigin) ? "Not Specified" : staff.Person.StateOfOrigin)</p>
                            </div>
                            <div class="col-md-6 mb-3">
                                <h6 class="text-muted">LGA of Origin</h6>
                                <p>@(string.IsNullOrEmpty(staff.Person.LgaOfOrigin) ? "Not Specified" : staff.Person.LgaOfOrigin)</p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Contact Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <h6 class="text-muted">Email</h6>
                                <p>@staff.Person.Email</p>
                            </div>
                            <div class="col-md-6 mb-3">
                                <h6 class="text-muted">Phone</h6>
                                <p>@staff.Person.PhoneNumber</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12 mb-3">
                                <h6 class="text-muted">Emergency Contact</h6>
                                <p>@(string.IsNullOrEmpty(staff.Person.EmergencyContact) ? "Not Specified" : staff.Person.EmergencyContact)</p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Employment Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <h6 class="text-muted">Staff ID</h6>
                                <p>@staff.Id</p>
                            </div>
                            <div class="col-md-6 mb-3">
                                <h6 class="text-muted">Date of Employment</h6>
                                <p>@staff.DateOfEmployment.ToString("MMMM d, yyyy")</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12 mb-3">
                                <h6 class="text-muted">Job Description</h6>
                                <p>@staff.JobDescription</p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="card mb-4">
                            <div class="card-header">
                                <h5 class="mb-0">Qualifications</h5>
                            </div>
                            <div class="card-body">
                                @if (staff.Qualifications != null && staff.Qualifications.Any())
                                {
                                    <ul class="list-group list-group-flush">
                                        @foreach (var qualification in staff.Qualifications)
                                        {
                                            <li class="list-group-item px-0">@qualification</li>
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <p>No qualifications recorded.</p>
                                }
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="card mb-4">
                            <div class="card-header">
                                <h5 class="mb-0">Work Experience</h5>
                            </div>
                            <div class="card-body">
                                @if (staff.WorkExperience != null && staff.WorkExperience.Any())
                                {
                                    <ul class="list-group list-group-flush">
                                        @foreach (var experience in staff.WorkExperience)
                                        {
                                            <li class="list-group-item px-0">@experience</li>
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <p>No work experience recorded.</p>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                @if (staff.Person.Addresses != null && staff.Person.Addresses.Any())
                {
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">Addresses</h5>
                        </div>
                        <div class="card-body">
                            <div class="accordion" id="addressAccordion">
                                @for (int i = 0; i < staff.Person.Addresses.Count; i++)
                                {
                                    var address = staff.Person.Addresses[i];
                                    var headingId = $"heading{i}";
                                    var collapseId = $"collapse{i}";

                                    <div class="accordion-item">
                                        <h2 class="accordion-header" id="@headingId">
                                            <button class="accordion-button @(i > 0 ? "collapsed" : "")" type="button" data-bs-toggle="collapse"
                                                    data-bs-target="#@collapseId" aria-expanded="@(i == 0 ? "true" : "false")" aria-controls="@collapseId">
                                                @address.AddressType Address
                                            </button>
                                        </h2>
                                        <div id="@collapseId" class="accordion-collapse collapse @(i == 0 ? "show" : "")"
                                             aria-labelledby="@headingId" data-bs-parent="#addressAccordion">
                                            <div class="accordion-body">
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <p><strong>Street:</strong> @address.Street</p>
                                                        <p><strong>City:</strong> @address.City</p>
                                                        <p><strong>State:</strong> @address.State</p>
                                                        <p><strong>Postal Code:</strong> @address.PostalCode</p>
                                                        <p><strong>Country:</strong> @address.Country</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private Staff? staff;

    protected override async Task OnInitializedAsync()
    {
        staff = SchoolDataService.GetStaffById(Id);

        if (staff == null)
        {
            NavigationManager.NavigateTo("/staff");
        }
    }
}