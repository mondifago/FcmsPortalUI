@page "/guardians/details/{Id:int}"
@inject GuardianService GuardianService
@inject NavigationManager NavigationManager
@using FcmsPortal.Models
@using FcmsPortal.Enums
@using FcmsPortalUI.Services
@rendermode InteractiveServer

<PageTitle>Guardian Details</PageTitle>

<div class="container">
    @if (guardian == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h1>Guardian Details</h1>
            <div>
                <a href="/guardians/edit/@Id" class="btn btn-warning">
                    <i class="oi oi-pencil"></i> Edit
                </a>
                <a href="/guardians" class="btn btn-secondary">
                    <i class="oi oi-arrow-left"></i> Back to List
                </a>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4 mb-4">
                <div class="card">
                    <div class="card-body text-center">
                        @if (!string.IsNullOrEmpty(guardian.Person.ProfilePictureUrl))
                        {
                            <img src="@guardian.Person.ProfilePictureUrl" class="img-fluid rounded-circle mb-3" style="width: 150px; height: 150px; object-fit: cover;" alt="Profile Picture" />
                        }
                        else
                        {
                            <div class="bg-light rounded-circle mx-auto d-flex justify-content-center align-items-center mb-3" style="width: 150px; height: 150px;">
                                <i class="oi oi-person" style="font-size: 3rem;"></i>
                            </div>
                        }
                        <h4>@GetFullName(guardian.Person)</h4>
                        <p class="text-muted">@guardian.RelationshipToStudent</p>
                    </div>
                </div>
            </div>

            <div class="col-md-8">
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Personal Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <h6 class="text-muted">Gender</h6>
                                <p>@guardian.Person.Sex</p>
                            </div>
                            <div class="col-md-6 mb-3">
                                <h6 class="text-muted">Occupation</h6>
                                <p>@guardian.Occupation</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <h6 class="text-muted">State of Origin</h6>
                                <p>@(string.IsNullOrEmpty(guardian.Person.StateOfOrigin) ? "Not Specified" : guardian.Person.StateOfOrigin)</p>
                            </div>
                            <div class="col-md-6 mb-3">
                                <h6 class="text-muted">LGA of Origin</h6>
                                <p>@(string.IsNullOrEmpty(guardian.Person.LgaOfOrigin) ? "Not Specified" : guardian.Person.LgaOfOrigin)</p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Contact Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <h6 class="text-muted">Email</h6>
                                <p>@guardian.Person.Email</p>
                            </div>
                            <div class="col-md-6 mb-3">
                                <h6 class="text-muted">Phone</h6>
                                @if (guardian.Person.PhoneNumber != null && guardian.Person.PhoneNumber.Any())
                                {
                                    @foreach (var phone in guardian.Person.PhoneNumber)
                                    {
                                        <p>@phone</p>
                                    }
                                }
                                else
                                {
                                    <p>Not Specified</p>
                                }
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12 mb-3">
                                <h6 class="text-muted">Next of Kin Contact</h6>
                                <p>@(string.IsNullOrEmpty(guardian.Person.NextOfKinContactDetails) ? "Not Specified" : guardian.Person.NextOfKinContactDetails)</p>
                            </div>
                        </div>
                    </div>
                </div>

                @if (guardian.Person.Addresses != null && guardian.Person.Addresses.Any())
                {
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">Addresses</h5>
                        </div>
                        <div class="card-body">
                            <div class="accordion" id="addressAccordion">
                                @for (int i = 0; i < guardian.Person.Addresses.Count; i++)
                                {
                                    var address = guardian.Person.Addresses[i];
                                    var headingId = $"heading{i}";
                                    var collapseId = $"collapse{i}";

                                    <div class="accordion-item">
                                        <h2 class="accordion-header" id="@headingId">
                                            <button class="accordion-button @(i > 0 ? "collapsed" : "")" type="button" data-bs-toggle="collapse"
                                                    data-bs-target="#@collapseId" aria-expanded="@(i == 0 ? "true" : "false")" aria-controls="@collapseId">
                                                @address.AddressType Address
                                            </button>
                                        </h2>
                                        <div id="@collapseId" class="accordion-collapse collapse @(i == 0 ? "show" : "")"
                                             aria-labelledby="@headingId" data-bs-parent="#addressAccordion">
                                            <div class="accordion-body">
                                                <div class="row">
                                                    <div class="col-md-12">
                                                        <p><strong>Street:</strong> @address.Street</p>
                                                        <p><strong>City:</strong> @address.City</p>
                                                        <p><strong>State:</strong> @address.State</p>
                                                        <p><strong>Postal Code:</strong> @address.PostalCode</p>
                                                        <p><strong>Country:</strong> @address.Country</p>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private Guardian guardian;

    protected override async Task OnInitializedAsync()
    {
        guardian = await GuardianService.GetGuardianByIdAsync(Id);

        if (guardian == null)
        {
            NavigationManager.NavigateTo("/guardians");
        }
    }

    private string GetFullName(Person person)
    {
        if (person == null) return "-";

        string middleName = string.IsNullOrEmpty(person.MiddleName) ? "" : $" {person.MiddleName}";
        return $"{person.FirstName}{middleName} {person.LastName}";
    }
}