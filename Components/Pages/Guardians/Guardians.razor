@page "/guardians"
@inject GuardianService GuardianService
@using FcmsPortal.Models
@using FcmsPortal.Enums
@using FcmsPortalUI.Services
@rendermode InteractiveServer

<PageTitle>Guardians</PageTitle>

<div class="container">
    <h3>Guardians</h3>

    <div class="mb-3">
        <a href="/guardians/create" class="btn btn-primary">
            <i class="fa fa-plus"></i> Add New Guardian
        </a>
    </div>

    @if (guardians == null)
    {
        <p><em>Loading...</em></p>
    }
    else if (!guardians.Any())
    {
        <div class="alert alert-info">
            No guardians found. Add a new guardian to get started.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Gender</th>
                        <th>Relationship to Student</th>
                        <th>Occupation</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var guardian in guardians)
                    {
                        <tr>
                            <td>
                                @if (!string.IsNullOrEmpty(guardian.Person.ProfilePictureUrl))
                                {
                                    <img src="@guardian.Person.ProfilePictureUrl" class="rounded-circle me-2" style="width: 30px; height: 30px;" alt="Profile" />
                                }
                                @GetFullName(guardian.Person)
                            </td>
                            <td>@guardian.Person.Sex</td>
                            <td>@guardian.RelationshipToStudent</td>
                            <td>@guardian.Occupation</td>
                            <td>@guardian.Person.Email</td>
                            <td>@(guardian.Person.PhoneNumber ?? "-")</td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a href="/guardians/details/@guardian.Id" class="btn btn-info btn-sm">
                                        <i class="fa fa-eye"></i> View
                                    </a>
                                    <a href="/guardians/edit/@guardian.Id" class="btn btn-warning btn-sm">
                                        <i class="fa fa-pencil"></i> Edit
                                    </a>
                                    <button class="btn btn-danger btn-sm" @onclick="() => DeleteGuardian(guardian.Id)">
                                        <i class="fa fa-trash"></i> Delete
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }

    @if (showDeleteConfirmation)
    {
        <div class="modal" tabindex="-1" style="display:block">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Confirm Delete</h5>
                        <button type="button" class="btn-close" @onclick="CancelDelete"></button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete this guardian?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="CancelDelete">Cancel</button>
                        <button type="button" class="btn btn-danger" @onclick="ConfirmDelete">Delete</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal-backdrop fade show"></div>
    }
</div>

@code {
    private List<Guardian> guardians;
    private int guardianIdToDelete;
    private bool showDeleteConfirmation = false;

    protected override async Task OnInitializedAsync()
    {
        guardians = await GuardianService.GetGuardiansAsync();
    }

    private string GetFullName(Person person)
    {
        if (person == null) return "-";

        string middleName = string.IsNullOrEmpty(person.MiddleName) ? "" : $" {person.MiddleName}";
        return $"{person.FirstName}{middleName} {person.LastName}";
    }

    private void DeleteGuardian(int id)
    {
        guardianIdToDelete = id;
        showDeleteConfirmation = true;
    }

    private async Task ConfirmDelete()
    {
        await GuardianService.DeleteGuardianAsync(guardianIdToDelete);
        showDeleteConfirmation = false;
        guardians = await GuardianService.GetGuardiansAsync();
    }

    private void CancelDelete()
    {
        showDeleteConfirmation = false;
    }
}