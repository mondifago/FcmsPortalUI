@page "/reports"
@using FcmsPortal.Models
@using FcmsPortal.Services
@using FcmsPortal
@inject ISchoolDataService SchoolDataService

<div class="container-fluid mt-3">
    <div class="row mb-3">
        <div class="col">
            <h2>
                <i class="fa fa-chart-bar me-2"></i>Reports
            </h2>
        </div>
    </div>

    <!-- Attendance Reports Section -->
    <div class="card mb-4">
        <div class="card-header bg-info text-white">
            <h4 class="mb-0">
                <i class="fa fa-calendar-check me-2"></i>Attendance Reports
            </h4>
        </div>
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-3">
                    <label for="academicYear" class="form-label">Academic Year:</label>
                    <select class="form-select" id="academicYear" @bind="selectedAcademicYear" @bind:after="OnFiltersChanged">
                        <option value="">Select Academic Year</option>
                        @foreach (var year in availableAcademicYears)
                        {
                            <option value="@year">@year</option>
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="semester" class="form-label">Semester:</label>
                    <select class="form-select" id="semester" @bind="selectedSemester" @bind:after="OnFiltersChanged">
                        <option value="">Select Semester</option>
                        @if (!string.IsNullOrEmpty(selectedAcademicYear))
                        {
                            @foreach (var semester in availableSemesters)
                            {
                                <option value="@semester">@semester</option>
                            }
                        }
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="attendanceDate" class="form-label">Select Date:</label>
                    <input type="date" class="form-control" id="attendanceDate" @bind="selectedDate" @bind:after="OnDateChanged" />
                </div>

            </div>

            @if (!string.IsNullOrEmpty(selectedAcademicYear) && !string.IsNullOrEmpty(selectedSemester) && learningPathsWithAttendance.Any())
            {
                <div class="row">
                    @foreach (var learningPathInfo in learningPathsWithAttendance)
                    {
                        <div class="col-md-12 mb-3">
                            <div class="card">
                                <div class="card-header bg-light">
                                    <h6 class="mb-0">
                                        <i class="fa fa-graduation-cap me-2"></i>
                                        @learningPathInfo.LearningPath.EducationLevel - @learningPathInfo.LearningPath.ClassLevel
                                    </h6>
                                    <small class="text-muted">
                                        Academic Year: @learningPathInfo.LearningPath.AcademicYear |
                                        Semester: @learningPathInfo.LearningPath.Semester
                                    </small>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <div class="col-md-8">
                                            <h6 class="text-primary">Semester Summary</h6>
                                            <div class="row text-center">
                                                <div class="col-3">
                                                    <div class="text-info">
                                                        <h5>@learningPathInfo.LearningPath.Students.Count</h5>
                                                        <small>Total Students</small>
                                                    </div>
                                                </div>
                                                <div class="col-3">
                                                    <div class="text-success">
                                                        <h5>@learningPathInfo.TotalAttendanceDays</h5>
                                                        <small>Days Recorded</small>
                                                    </div>
                                                </div>
                                                <div class="col-3">
                                                    <div class="text-warning">
                                                        <h5>@learningPathInfo.AverageAttendanceRate.ToString("F1")%</h5>
                                                        <small>Avg Attendance</small>
                                                    </div>
                                                </div>
                                                <div class="col-3">
                                                    <div class="text-primary">
                                                        <h5>@learningPathInfo.LearningPath.FeePerSemester.ToString("C")</h5>
                                                        <small>Semester Fee</small>
                                                    </div>
                                                </div>
                                            </div>

                                            @if (learningPathInfo.DailyAttendance != null)
                                            {
                                                <div class="mt-3">
                                                    <h6 class="text-success">Daily Attendance (@selectedDate.ToString("MMMM dd, yyyy"))</h6>
                                                    <div class="row text-center">
                                                        <div class="col-4">
                                                            <div class="text-success">
                                                                <h5>@(learningPathInfo.DailyAttendance.PresentStudents?.Count ?? 0)</h5>
                                                                <small>Present</small>
                                                            </div>
                                                        </div>
                                                        <div class="col-4">
                                                            <div class="text-danger">
                                                                <h5>@(learningPathInfo.DailyAttendance.AbsentStudents?.Count ?? 0)</h5>
                                                                <small>Absent</small>
                                                            </div>
                                                        </div>
                                                        <div class="col-4">
                                                            <div class="text-primary">
                                                                <h5>@((learningPathInfo.DailyAttendance.PresentStudents?.Count ?? 0) + (learningPathInfo.DailyAttendance.AbsentStudents?.Count ?? 0))</h5>
                                                                <small>Total</small>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    @if (learningPathInfo.DailyAttendance.TimeStamp != default)
                                                    {
                                                        <small class="text-muted d-block mt-2">
                                                            <i class="fa fa-clock me-1"></i>
                                                            Recorded at @learningPathInfo.DailyAttendance.TimeStamp.ToString("HH:mm")
                                                            by @(learningPathInfo.DailyAttendance.Teacher?.Person?.FirstName ?? "Unknown")
                                                        </small>
                                                    }
                                                </div>
                                            }
                                        </div>
                                        <div class="col-md-4 d-flex flex-column justify-content-center">
                                            <div class="d-grid gap-2">
                                                <button class="btn btn-outline-primary" @onclick="() => ViewDailyAttendance(learningPathInfo.LearningPath.Id)">
                                                    <i class="fa fa-calendar-day me-2"></i>Daily Attendance View
                                                </button>
                                                <button class="btn btn-outline-success" @onclick="() => ViewSemesterAttendance(learningPathInfo.LearningPath.Id)">
                                                    <i class="fa fa-chart-line me-2"></i>Semester Attendance View
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                @if (!string.IsNullOrEmpty(selectedAcademicYear) && !string.IsNullOrEmpty(selectedSemester))
                {
                    <div class="text-center py-4">
                        <i class="fa fa-calendar-times fa-3x text-muted mb-3"></i>
                        <h5 class="text-muted">No attendance records found</h5>
                        <p class="text-muted">
                            @if (selectedDate == default)
                            {
                                <span>Please select a date to view attendance records.</span>
                            }
                            else
                            {
                                <span>No attendance records found for @selectedDate.ToString("MMMM dd, yyyy") in @selectedAcademicYear @selectedSemester semester.</span>
                            }
                        </p>
                    </div>
                }
                else
                {
                    <div class="text-center py-4">
                        <i class="fa fa-filter fa-3x text-muted mb-3"></i>
                        <h5 class="text-muted">Select filters to view attendance</h5>
                        <p class="text-muted">Please select Academic Year and Semester to continue.</p>
                    </div>
                }
            }

        </div>
    </div>
</div>

@code {
    private School school;
    private DateTime selectedDate = DateTime.Today;
    private string selectedAcademicYear = "";
    private string selectedSemester = "";

    private List<string> availableAcademicYears = new();
    private List<string> availableSemesters = new();
    private List<LearningPathAttendanceInfo> learningPathsWithAttendance = new();


    protected override void OnInitialized()
    {
        school = SchoolDataService.GetSchool();
        LoadAvailableAcademicYears();
    }

    private void LoadAvailableAcademicYears()
    {
        availableAcademicYears = school.LearningPath
            .Select(lp => lp.AcademicYear)
            .Distinct()
            .OrderByDescending(year => year)
            .ToList();
    }

    private void OnFiltersChanged()
    {
        if (!string.IsNullOrEmpty(selectedAcademicYear))
        {
            LoadAvailableSemesters();
        }

        if (!string.IsNullOrEmpty(selectedAcademicYear) && !string.IsNullOrEmpty(selectedSemester))
        {
            LoadLearningPathsWithAttendance();
        }
    }

    private void LoadAvailableSemesters()
    {
        availableSemesters = school.LearningPath
            .Where(lp => lp.AcademicYear == selectedAcademicYear)
            .Select(lp => lp.Semester.ToString())
            .Distinct()
            .OrderBy(semester => semester)
            .ToList();
    }

    private void OnDateChanged()
    {
        if (!string.IsNullOrEmpty(selectedAcademicYear) && !string.IsNullOrEmpty(selectedSemester))
        {
            LoadLearningPathsWithAttendance();
        }
    }

    private void LoadLearningPathsWithAttendance()
    {
        learningPathsWithAttendance.Clear();

        var filteredLearningPaths = school.LearningPath
            .Where(lp => lp.AcademicYear == selectedAcademicYear &&
                         lp.Semester.ToString() == selectedSemester)
            .ToList();

        foreach (var learningPath in filteredLearningPaths)
        {
            var dailyAttendance = learningPath.AttendanceLog
                .FirstOrDefault(log => log.TimeStamp.Date == selectedDate.Date);

            if (dailyAttendance != null)
            {
                var attendanceInfo = new LearningPathAttendanceInfo
                {
                    LearningPath = learningPath,
                    DailyAttendance = dailyAttendance,
                    TotalAttendanceDays = learningPath.AttendanceLog.Count,
                    AverageAttendanceRate = CalculateAverageAttendanceRate(learningPath)
                };

                learningPathsWithAttendance.Add(attendanceInfo);
            }
        }
    }

    private double CalculateAverageAttendanceRate(LearningPath learningPath)
    {
        if (!learningPath.AttendanceLog.Any() || !learningPath.Students.Any())
            return 0;

        var totalStudents = learningPath.Students.Count;
        var totalAttendanceDays = learningPath.AttendanceLog.Count;
        var totalPossibleAttendances = totalStudents * totalAttendanceDays;

        if (totalPossibleAttendances == 0)
            return 0;

        var totalActualAttendances = learningPath.AttendanceLog
            .Sum(log => log.PresentStudents?.Count ?? 0);

        return (double)totalActualAttendances / totalPossibleAttendances * 100;
    }

    private void ViewDailyAttendance(int learningPathId)
    {
        // Navigate to daily attendance view for the specific learning path
        // Implementation will depend on your routing setup
        Console.WriteLine($"Navigate to daily attendance view for Learning Path {learningPathId}");
    }

    private void ViewSemesterAttendance(int learningPathId)
    {
        // Navigate to semester attendance view for the specific learning path
        // Implementation will depend on your routing setup
        Console.WriteLine($"Navigate to semester attendance view for Learning Path {learningPathId}");
    }

    public class LearningPathAttendanceInfo
    {
        public LearningPath LearningPath { get; set; }
        public DailyAttendanceLogEntry DailyAttendance { get; set; }
        public int TotalAttendanceDays { get; set; }
        public double AverageAttendanceRate { get; set; }
    }

}