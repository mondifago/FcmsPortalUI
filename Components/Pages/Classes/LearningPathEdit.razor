@page "/learningpath/edit/{Id:int}"
@rendermode InteractiveServer
@inject ISchoolDataService SchoolDataService
@inject NavigationManager NavigationManager
@using FcmsPortal.Models
@using FcmsPortal.Enums
@using FcmsPortal.Services
@using FcmsPortal
@using FcmsPortalUI.Components.Pages.Shared

<h3>Edit Learning Path</h3>

@if (learningPath == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-8">
            <LearningPathForm LearningPath="learningPath"
                              SubmitButtonText="Update Learning Path"
                              OnSubmit="HandleValidSubmit"
                              OnCancel="NavigateToList" />
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private LearningPath learningPath;

    protected override void OnInitialized()
    {
        learningPath = SchoolDataService.GetLearningPathById(Id);

        if (learningPath == null)
        {
            NavigationManager.NavigateTo("/classes");
            return;
        }

        if (learningPath.Students == null)
            learningPath.Students = new List<Student>();

        if (learningPath.StudentsPaymentSuccessful == null)
            learningPath.StudentsPaymentSuccessful = new List<Student>();

        if (learningPath.Schedule == null)
            learningPath.Schedule = new List<ScheduleEntry>();

        if (learningPath.GradesList == null)
            learningPath.GradesList = new Dictionary<Student, CourseGrade>();

        if (learningPath.AcademicYearStart == default)
            learningPath.AcademicYearStart = new DateTime(DateTime.Now.Year, 9, 1);
    }

    private void HandleValidSubmit(LearningPath submittedLearningPath)
    {
        var previousStudents = new List<Student>(learningPath.Students);
        foreach (var student in previousStudents)
        {
            if (!submittedLearningPath.Students.Contains(student))
            {
                if (student.Person.SchoolFees != null)
                {
                    student.Person.SchoolFees.TotalAmount = 0;
                }
            }
        }

        LogicMethods.SetStudentFeesForLearningPath(submittedLearningPath);
        SchoolDataService.UpdateLearningPath(submittedLearningPath);
        NavigateToList();
    }

    private void NavigateToList()
    {
        NavigationManager.NavigateTo("/classes");
    }
}