@using FcmsPortal.Models
@using FcmsPortal.Services
@using FcmsPortal.Enums
@using FcmsPortal
@using System.Globalization
@rendermode InteractiveServer

<div class="modal @(IsVisible ? "show" : "")" style="display: @(IsVisible ? "block" : "none");" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">School Payment Report</h5>
                <button type="button" class="btn-close" @onclick="Close"></button>
            </div>
            <div class="modal-body">
                @if (School == null)
                {
                    <p>Loading...</p>
                }
                else
                {
                    <div class="payment-report">
                        <h2>School Payment Report</h2>

                        <div class="report-section">
                            <div class="report-grid">
                                <div>
                                    <p><strong>School:</strong> @School.Name</p>
                                    <p><strong>Academic Year:</strong> @reportData.AcademicYear</p>
                                    <p><strong>Semester:</strong> @reportData.Semester</p>
                                </div>
                                <div>
                                    <p><strong>Semester Start:</strong> @reportData.SemesterStartDate.ToString("yyyy-MM-dd")</p>
                                    <p><strong>Semester End:</strong> @reportData.SemesterEndDate.ToString("yyyy-MM-dd")</p>
                                    <p><strong>Total Students:</strong> @reportData.TotalStudents</p>
                                </div>
                            </div>
                        </div>

                        <div class="report-section">
                            <div class="report-grid">
                                <div>
                                    <p><strong>Total School Fees:</strong> @reportData.TotalSchoolFeesAmount.ToString("C", new CultureInfo("en-NG"))</p>
                                    <p><strong>Total Amount Paid:</strong> @reportData.TotalAmountPaid.ToString("C", new CultureInfo("en-NG"))</p>
                                    <p><strong>Total Outstanding:</strong> @reportData.TotalOutstanding.ToString("C", new CultureInfo("en-NG"))</p>
                                </div>
                                <div>
                                    <p><strong>School Payment Completion Rate:</strong> @reportData.SchoolPaymentCompletionRate.ToString("F2")%</p>
                                    <p><strong>Average Student Payment Rate:</strong> @reportData.AverageStudentPaymentCompletionRateInSchool.ToString("F2")%</p>
                                    <p><strong>Average Student Timely Rate:</strong> @reportData.AverageStudentTimelyCompletionRate.ToString("F2")%</p>
                                </div>
                            </div>
                        </div>

                        <div class="timestamp text-muted">
                            <em>Report generated on @reportData.DateAndTimeReportGenerated.ToString("yyyy-MM-dd HH:mm:ss")</em>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="PrintReport">Print</button>
                <button type="button" class="btn btn-secondary" @onclick="Close">Close</button>
            </div>
        </div>
    </div>
</div>

@if (IsVisible)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public FcmsPortal.Models.School School { get; set; }

    [Parameter]
    public string AcademicYear { get; set; }

    [Parameter]
    public Semester Semester { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    private SchoolPaymentReportEntry reportData = new SchoolPaymentReportEntry();

    protected override void OnParametersSet()
    {
        if (IsVisible && School != null)
        {
            reportData = LogicMethods.GenerateSchoolPaymentReport(School.LearningPath, School.Students);
        }
    }

    private void PrintReport()
    {
        // placeholder
    }

    private void Close()
    {
        OnClose.InvokeAsync();
    }
}
