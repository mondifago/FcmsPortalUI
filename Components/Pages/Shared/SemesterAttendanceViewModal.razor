@using FcmsPortal.Models
@using FcmsPortal.Services
@inject ISchoolDataService SchoolDataService

<div class="modal fade @(IsVisible ? "show" : "hidden")" tabindex="-1">
    <div class="modal-dialog modal-fullscreen">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h4 class="mb-0">
                    <i class="fa fa-table me-2"></i>
                    Semester Attendance Report - @(LearningPath != null ? Util.GetLearningPathName(LearningPath) : "")
                </h4>
                <button type="button" class="btn-close btn-close-white" @onclick="Close"></button>
            </div>
            <div class="modal-body p-0">
                @if (AttendanceReport != null && AttendanceReport.Students.Any())
                {
                    <div class="table-container">
                        <table class="table table-sm attendance-table mb-0">
                            <thead>
                                <tr>
                                    <th class="student-name">Student Name</th>
                                    @foreach (var date in AttendanceReport.AttendanceDates.OrderBy(d => d))
                                    {
                                        <th class="date-header">@date.ToString("MMM dd")</th>
                                    }
                                    <th class="summary-col rotated-header">Present</th>
                                    <th class="summary-col rotated-header">Absent</th>
                                    <th class="summary-col">Rate</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var student in AttendanceReport.Students.OrderBy(s => s.StudentName))
                                {
                                    <tr>
                                        <td class="student-name">@student.StudentName</td>
                                        @foreach (var date in AttendanceReport.AttendanceDates.OrderBy(d => d))
                                        {
                                            <td class="text-center">
                                                @if (student.AttendanceByDate.TryGetValue(date, out var isPresent))
                                                {
                                                    @if (isPresent)
                                                    {
                                                        <i class="fa fa-check text-success fs-5"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="fa fa-times text-danger fs-5"></i>
                                                    }
                                                }
                                            </td>
                                        }
                                        <td class="summary-col">@student.TotalPresentDays</td>
                                        <td class="summary-col">@student.TotalAbsentDays</td>
                                        <td class="summary-col @GetAttendanceRateClass(student.AttendanceRate)">
                                            @student.AttendanceRate.ToString("F0")%
                                        </td>
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr class="table-secondary">
                                    <th class="student-name">Daily Totals</th>
                                    @foreach (var date in AttendanceReport.AttendanceDates.OrderBy(d => d))
                                    {
                                        <th class="text-center">@GetDailyPresentCount(date)</th>
                                    }
                                    <th class="summary-col">@AttendanceReport.Students.Sum(s => s.TotalPresentDays)</th>
                                    <th class="summary-col">@AttendanceReport.Students.Sum(s => s.TotalAbsentDays)</th>
                                    <th class="summary-col">@GetOverallAttendanceRate().ToString("F0")%</th>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="fa fa-chart-line fa-3x text-muted mb-3"></i>
                        <h5 class="text-muted">No semester attendance data available</h5>
                        <p class="text-muted">
                            @if (LearningPath != null)
                            {
                                <span>No attendance records found for @Util.GetLearningPathName(LearningPath)</span>
                            }
                            else
                            {
                                <span>Please select a learning path to view attendance data.</span>
                            }
                        </p>
                    </div>
                }
            </div>
            <div class="modal-footer bg-light">
                <div class="row w-100">
                    <div class="col-md-8">
                        <small class="text-muted">
                            <i class="fa fa-check text-success me-1"></i> Present
                            <span class="ms-3">
                                <i class="fa fa-times text-danger me-1"></i> Absent
                            </span>
                        </small>
                    </div>
                    <div class="col-md-4 text-end">
                        <small class="text-muted">
                            <span class="badge bg-success me-1">90%+</span> Excellent
                            <span class="badge bg-warning me-1 text-dark">70-89%</span> Good
                            <span class="badge bg-danger">Below 70%</span> Poor
                        </small>
                    </div>
                </div>
                <div class="row w-100 mt-2">
                    <div class="col text-end">
                        <button type="button" class="btn btn-secondary" @onclick="Close">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@if (IsVisible)
{
    <div class="modal-backdrop fade show"></div>
}


@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public LearningPath LearningPath { get; set; }
    [Parameter] public SemesterAttendanceReport AttendanceReport { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }

    private string GetAttendanceRateClass(double rate)
    {
        if (rate >= 90) return "rate-excellent";
        if (rate >= 70) return "rate-good";
        return "rate-poor";
    }

    private int GetDailyPresentCount(DateTime date)
    {
        return AttendanceReport?.Students?.Count(s => s.AttendanceByDate.ContainsKey(date) && s.AttendanceByDate[date]) ?? 0;
    }

    private double GetOverallAttendanceRate()
    {
        if (AttendanceReport?.Students == null || !AttendanceReport.Students.Any())
            return 0;

        return AttendanceReport.Students.Average(s => s.AttendanceRate);
    }

    private async Task Close()
    {
        await OnClose.InvokeAsync();
    }
}
