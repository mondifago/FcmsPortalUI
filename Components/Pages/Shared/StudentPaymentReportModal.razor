@using FcmsPortal.Models
@using FcmsPortal.Services
@using FcmsPortal
@using System.Globalization
@rendermode InteractiveServer


<div class="modal @(IsVisible ? "show" : "")" style="display: @(IsVisible ? "block" : "none");" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Payment Report</h5>
                <button type="button" class="btn-close" @onclick="Close"></button>
            </div>
            <div class="modal-body">
                @if (Student == null)
                {
                    <p>Loading...</p>
                }
                else
                {
                    <div class="card p-4 shadow rounded-2xl bg-white max-w-4xl mx-auto mt-5">

                        <h2 class="text-2xl font-bold mb-4 text-gray-700">Student Payment Report</h2>

                        <div class="grid grid-cols-2 gap-4 mb-4 text-sm text-gray-800">
                            <div>
                                <strong>Student:</strong> @reportData.StudentFullName<br />
                                <strong>Address:</strong> @reportData.StudentAddress<br />
                                <strong>Learning Path:</strong> @reportData.LearningPathName<br />
                            </div>
                            <div>
                                <strong>Academic Year:</strong> @reportData.AcademicYear<br />
                                <strong>Semester:</strong> @reportData.Semester<br />
                                <strong>Total Fees:</strong> @reportData.TotalFees.ToString("C", new CultureInfo("en-NG"))<br />
                                <strong>Total Paid:</strong> @reportData.TotalPaid.ToString("C", new CultureInfo("en-NG"))<br />
                                <strong>Balance:</strong> @reportData.OutstandingBalance.ToString("C", new CultureInfo("en-NG"))
                            </div>
                        </div>

                        <div class="grid grid-cols-2 gap-4 mb-4 text-sm text-gray-800">
                            <div>
                                <strong>Payment Completion Rate:</strong> @reportData.StudentPaymentCompletionRate.ToString("F2")%<br />
                            </div>
                            <div>
                                <strong>Timely Completion Rate:</strong> @reportData.StudentTimelyCompletionRate.ToString("F2")%<br />
                            </div>
                        </div>

                        <h3 class="text-lg font-semibold mb-2 mt-4 text-gray-700">Payment History</h3>

                        <table class="table-auto w-full border text-sm text-gray-800">
                            <thead class="bg-gray-100 text-left">
                                <tr>
                                    <th class="px-3 py-2 border">Date</th>
                                    <th class="px-3 py-2 border">Amount</th>
                                    <th class="px-3 py-2 border">Method</th>
                                    <th class="px-3 py-2 border">Reference</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (reportData.PaymentDetails != null && reportData.PaymentDetails.Any())
                                {
                                    @foreach (var payment in reportData.PaymentDetails)
                                    {
                                        <tr class="border-b">
                                            <td class="px-3 py-2 border">@payment.Date.ToString("yyyy-MM-dd")</td>
                                            <td class="px-3 py-2 border">@payment.Amount.ToString("C", new CultureInfo("en-NG"))</td>
                                            <td class="px-3 py-2 border">@payment.PaymentMethod</td>
                                            <td class="px-3 py-2 border">@payment.Reference</td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="4" class="text-center py-2">No payment records available.</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <div class="mt-4 text-xs text-gray-500">
                            <em>Report generated on @reportData.DateAndTimeReportGenerated.ToString("yyyy-MM-dd HH:mm:ss")</em>
                        </div>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="Close">Close</button>
            </div>
        </div>
    </div>
</div>

@if (IsVisible)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    [Parameter]
    public bool IsVisible { get; set; }

    [Parameter]
    public Student Student { get; set; }

    [Parameter]
    public EventCallback OnClose { get; set; }

    private StudentPaymentReportEntry reportData = new StudentPaymentReportEntry();

    protected override void OnParametersSet()
    {
        if (IsVisible && Student != null)
        {
            reportData = LogicMethods.GenerateStudentPaymentReportEntry(Student);
        }
    }

    private void Close()
    {
        OnClose.InvokeAsync();
    }
}
