@using Microsoft.AspNetCore.Components.Forms
@using FcmsPortalUI.Services
@using FcmsPortal.Models
@using FcmsPortal.Constants
@inject ISchoolDataService SchoolDataService


<div class="mb-3">
    <label for="profilePicture" class="form-label">@Label</label>
    <div class="d-flex justify-content-center">
        <div class="position-relative" style="width: @Size; height: @Size;">
            @if (!string.IsNullOrEmpty(ImageUrl))
            {
                <img src="@ImageUrl" class="rounded-circle" style="width: @Size; height: @Size; object-fit: cover;" alt="@AltText" />
            }
            else
            {
                <div class="bg-light rounded-circle d-flex justify-content-center align-items-center" style="width: 150px; height: 150px;">
                    <i class="fa fa-user" style="font-size: 5rem;"></i>
                </div>
            }
        </div>
    </div>
    @if (AllowUpload)
    {
        <InputFile OnChange="HandleFileSelection" class="form-control mt-2" accept="image/*" disabled="@IsUploading" />
    }

    @if (IsUploading)
    {
        <div class="text-center mt-2">
            <div class="spinner-border spinner-border-sm" role="status">
                <span class="visually-hidden">Uploading...</span>
            </div>
            <small class="text-muted ms-2">Uploading...</small>
        </div>
    }

    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="text-danger mt-2">@ErrorMessage</div>
    }
</div>

@code {
    [Parameter]
    public string Category { get; set; } = "ProfilePictures";

    [Parameter]
    public string Label { get; set; } = "Profile Picture";

    [Parameter]
    public string ImageUrl { get; set; } = "";

    [Parameter]
    public string Size { get; set; } = "150px";

    [Parameter]
    public string AltText { get; set; } = "Profile Picture";

    [Parameter]
    public bool AllowUpload { get; set; } = true;

    [Parameter]
    public EventCallback<string> ImageUrlChanged { get; set; }

    private string ErrorMessage = "";
    private bool IsUploading = false;

    private async Task HandleFileSelection(InputFileChangeEventArgs e)
    {
        ErrorMessage = "";
        var file = e.File;

        if (file.Size > FcmsConstants.MAX_FILE_SIZE)
        {
            ErrorMessage = $"File size exceeds the maximum allowed size of {FcmsConstants.MAX_FILE_SIZE_MB}MB.";
            return;
        }

        var allowedTypes = new[] { "image/jpeg", "image/jpg", "image/png", "image/gif", "image/webp" };
        if (!allowedTypes.Contains(file.ContentType.ToLower()))
        {
            ErrorMessage = "Please select a valid image file (JPEG, PNG, GIF, or WebP).";
            return;
        }

        IsUploading = true;
        StateHasChanged();

        try
        {
            var attachment = await SchoolDataService.UploadFileAsync(file, Category);
            await ImageUrlChanged.InvokeAsync(attachment.FilePath);
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Error uploading image: {ex.Message}";
        }
        finally
        {
            IsUploading = false;
            StateHasChanged();
        }
    }
}