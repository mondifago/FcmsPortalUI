@using FcmsPortal.Models
@using FcmsPortal.Enums
@using Microsoft.AspNetCore.Components.Forms

<EditForm Model="@Address" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label>Street</label>
        <InputText class="form-control" @bind-Value="Address.Street" />
        <ValidationMessage For="@(() => Address.Street)" />
    </div>
    <div class="form-group">
        <label>City</label>
        <InputText class="form-control" @bind-Value="Address.City" />
        <ValidationMessage For="@(() => Address.City)" />
    </div>
    <div class="form-group">
        <label>State</label>
        <InputText class="form-control" @bind-Value="Address.State" />
        <ValidationMessage For="@(() => Address.State)" />
    </div>
    <div class="form-group">
        <label>Postal Code</label>
        <InputText class="form-control" @bind-Value="Address.PostalCode" />
        <ValidationMessage For="@(() => Address.PostalCode)" />
    </div>
    <div class="form-group">
        <label>Country</label>
        <InputText class="form-control" @bind-Value="Address.Country" />
        <ValidationMessage For="@(() => Address.Country)" />
    </div>
    <div class="form-group">
        <label>Address Type</label>
        <InputSelect class="form-control" @bind-Value="Address.AddressType">
            @foreach (AddressType type in Enum.GetValues(typeof(AddressType)))
            {
                <option value="@type">@type</option>
            }
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary mt-2">@ButtonText</button>
    <button type="button" class="btn btn-secondary mt-2" @onclick="CancelEdit">Cancel</button>
</EditForm>

@code {
    [Parameter, EditorRequired]
    public Address Address { get; set; } 

    [Parameter, EditorRequired]
    public EventCallback<Address> OnValidSubmit { get; set; }

    [Parameter, EditorRequired]
    public EventCallback OnCancel { get; set; }

    [Parameter]
    public string ButtonText { get; set; } = "Submit";

    private async Task HandleValidSubmit()
    {
        await OnValidSubmit.InvokeAsync(Address);
    }

    private async Task CancelEdit()
    {
        await OnCancel.InvokeAsync();
    }
}

