@using FcmsPortal.Models
@using FcmsPortal.Services
@using FcmsPortal
@inject ISchoolDataService SchoolDataService

<div class="modal fade @(IsVisible ? "show d-block" : "")" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h4 class="mb-0">
                    <i class="fa fa-calendar-check me-2"></i>
                    Daily Attendance Report - @SelectedDate.ToString("dddd, MMMM dd, yyyy")
                </h4>
                <button type="button" class="btn-close btn-close-white" @onclick="Close"></button>
            </div>
            <div class="modal-body p-0">
                @if (AttendanceData != null && AttendanceData.Any())
                {
                    @foreach (var pathAttendance in AttendanceData)
                    {
                        var learningPath = SchoolDataService.GetLearningPathById(pathAttendance.LearningPathId);
                        if (learningPath != null)
                        {
                            <div class="card mb-4 border-start border-4 @GetBorderColorClass(learningPath.EducationLevel)">
                                <div class="card-header bg-light">
                                    <h5 class="mb-0">@Util.GetLearningPathName(learningPath)</h5>
                                    <small class="text-muted">Learning Path ID: @learningPath.Id</small>
                                </div>
                                <div class="card-body">
                                    <div class="row">
                                        <!-- Present Students -->
                                        <div class="col-md-6">
                                            <h6 class="text-success">
                                                <i class="fa fa-check-circle me-1"></i>
                                                Present Students (@pathAttendance.PresentStudents.Count)
                                            </h6>
                                            <div class="list-group list-group-flush">
                                                @foreach (var student in pathAttendance.PresentStudents)
                                                {
                                                    <div class="list-group-item d-flex align-items-center">
                                                        <span class="badge bg-success me-2">P</span>
                                                        @Util.GetFullName(student.Person)
                                                    </div>
                                                }
                                            </div>
                                        </div>

                                        <!-- Absent Students -->
                                        <div class="col-md-6">
                                            <h6 class="text-danger">
                                                <i class="fa fa-times-circle me-1"></i>
                                                Absent Students (@pathAttendance.AbsentStudents.Count)
                                            </h6>
                                            <div class="list-group list-group-flush">
                                                @if (pathAttendance.AbsentStudents.Any())
                                                {
                                                    @foreach (var student in pathAttendance.AbsentStudents)
                                                    {
                                                        <div class="list-group-item d-flex align-items-center">
                                                            <span class="badge bg-danger me-2">A</span>
                                                            @Util.GetFullName(student.Person)
                                                        </div>
                                                    }
                                                }
                                                else
                                                {
                                                    <div class="list-group-item d-flex align-items-center text-muted">
                                                        <span class="badge bg-secondary me-2">-</span>
                                                        No absent students
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Summary Stats -->
                                    <div class="row mt-3 pt-3 border-top">
                                        <div class="col-md-3">
                                            <div class="text-center">
                                                <h4 class="text-primary">@(pathAttendance.PresentStudents.Count + pathAttendance.AbsentStudents.Count)</h4>
                                                <small class="text-muted">Total Students</small>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="text-center">
                                                <h4 class="text-success">@pathAttendance.PresentStudents.Count</h4>
                                                <small class="text-muted">Present</small>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="text-center">
                                                <h4 class="text-danger">@pathAttendance.AbsentStudents.Count</h4>
                                                <small class="text-muted">Absent</small>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="text-center">
                                                <h4 class="text-info">@LogicMethods.CalculateAttendanceRate(pathAttendance.PresentStudents.Count, pathAttendance.PresentStudents.Count + pathAttendance.AbsentStudents.Count).ToString("F0")%</h4>
                                                <small class="text-muted">Attendance Rate</small>
                                            </div>
                                        </div>
                                    </div>

                                    @if (pathAttendance.TimeStamp != default)
                                    {
                                        <div class="mt-3 pt-3 border-top">
                                            <small class="text-muted">
                                                <i class="fa fa-clock me-1"></i>
                                                Recorded at @pathAttendance.TimeStamp.ToString("HH:mm")
                                                by @(pathAttendance.Teacher?.Person?.FirstName ?? "Unknown")
                                            </small>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    }

                    <!-- Overall Summary -->
                    <div class="card bg-light mb-3">
                        <div class="card-body">
                            <h5 class="card-title">Daily Summary</h5>
                            <div class="row text-center">
                                <div class="col-md-3">
                                    <h3 class="text-primary">@TotalStudents</h3>
                                    <p class="text-muted">Total Students</p>
                                </div>
                                <div class="col-md-3">
                                    <h3 class="text-success">@TotalPresent</h3>
                                    <p class="text-muted">Present</p>
                                </div>
                                <div class="col-md-3">
                                    <h3 class="text-danger">@TotalAbsent</h3>
                                    <p class="text-muted">Absent</p>
                                </div>
                                <div class="col-md-3">
                                    <h3 class="text-info">@OverallAttendanceRate.ToString("F0")%</h3>
                                    <p class="text-muted">Overall Rate</p>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="fa fa-calendar-times fa-3x text-muted mb-3"></i>
                        <h5 class="text-muted">No attendance records found</h5>
                        <p class="text-muted">No attendance has been taken for @SelectedDate.ToString("MMMM dd, yyyy")</p>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="Close">Close</button>
            </div>
        </div>
    </div>
</div>

@if (IsVisible)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public DateTime SelectedDate { get; set; } = DateTime.Today;
    [Parameter] public List<DailyAttendanceLogEntry> AttendanceData { get; set; } = new();
    [Parameter] public EventCallback OnClose { get; set; }

    private int TotalStudents => AttendanceData?.Sum(a => a.PresentStudents.Count + a.AbsentStudents.Count) ?? 0;
    private int TotalPresent => AttendanceData?.Sum(a => a.PresentStudents.Count) ?? 0;
    private int TotalAbsent => AttendanceData?.Sum(a => a.AbsentStudents.Count) ?? 0;
    private double OverallAttendanceRate => TotalStudents > 0 ? (double)TotalPresent / TotalStudents * 100 : 0;

    private string GetBorderColorClass(EducationLevel educationLevel)
    {
        return educationLevel switch
        {
            EducationLevel.Primary => "border-primary",
            EducationLevel.Secondary => "border-info",
            EducationLevel.SeniorCollege => "border-warning",
            EducationLevel.Kindergarten => "border-success",
            _ => "border-secondary"
        };
    }

    private async Task Close()
    {
        await OnClose.InvokeAsync();
    }
}
