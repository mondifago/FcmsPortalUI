@using FcmsPortal.Models
@using FcmsPortalUI.Services
@using FcmsPortal
@inject ISchoolDataService SchoolDataService

<div class="modal fade @(IsVisible ? "show" : "hidden")" tabindex="-1">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h4 class="mb-0">
                    <i class="fa fa-calendar-check me-2"></i>
                    Daily Attendance Report - @SelectedDate.ToString("dddd, MMMM dd, yyyy")
                </h4>
                <button type="button" class="btn-close btn-close-white" @onclick="Close"></button>
            </div>
            <div class="modal-body p-0">
                @if (AttendanceData != null)
                {
                    var learningPath = SchoolDataService.GetLearningPathById(AttendanceData.LearningPathId);
                    if (learningPath != null)
                    {
                        <div class="card mb-4">
                            <div class="card-header bg-light">
                                <h5 class="mb-0">@Util.GetLearningPathName(learningPath)</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <!-- Present Students -->
                                    <div class="col-md-6">
                                        <h6 class="text-success">
                                            <i class="fa fa-check-circle me-1"></i>
                                            Present Students (@AttendanceData.PresentStudents.Count)
                                        </h6>
                                        <div class="list-group list-group-flush">
                                            @foreach (var student in AttendanceData.PresentStudents)
                                            {
                                                <div class="list-group-item d-flex align-items-center">
                                                    <span class="badge bg-success me-2">P</span>
                                                    @Util.GetFullName(student.Person)
                                                </div>
                                            }
                                        </div>
                                    </div>

                                    <!-- Absent Students -->
                                    <div class="col-md-6">
                                        <h6 class="text-danger">
                                            <i class="fa fa-times-circle me-1"></i>
                                            Absent Students (@AttendanceData.AbsentStudents.Count)
                                        </h6>
                                        <div class="list-group list-group-flush">
                                            @if (AttendanceData.AbsentStudents.Any())
                                            {
                                                @foreach (var student in AttendanceData.AbsentStudents)
                                                {
                                                    <div class="list-group-item d-flex align-items-center">
                                                        <span class="badge bg-danger me-2">A</span>
                                                        @Util.GetFullName(student.Person)
                                                    </div>
                                                }
                                            }
                                            else
                                            {
                                                <div class="list-group-item d-flex align-items-center text-muted">
                                                    <span class="badge bg-secondary me-2">-</span>
                                                    No absent students
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>

                                <!-- Summary Stats -->
                                <div class="row mt-3 pt-3 border-top">
                                    <div class="col-md-3">
                                        <div class="text-center">
                                            <h4 class="text-primary">
                                                @(AttendanceData.PresentStudents.Count + AttendanceData.AbsentStudents.Count)
                                            </h4>
                                            <small class="text-muted">Total Students</small>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="text-center">
                                            <h4 class="text-success">@AttendanceData.PresentStudents.Count</h4>
                                            <small class="text-muted">Present</small>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="text-center">
                                            <h4 class="text-danger">@AttendanceData.AbsentStudents.Count</h4>
                                            <small class="text-muted">Absent</small>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="text-center">
                                            <h4 class="text-info">
                                                @LogicMethods.CalculateAttendanceRate(
                                                AttendanceData.PresentStudents.Count,
                                                                                AttendanceData.PresentStudents.Count + AttendanceData.AbsentStudents.Count
                                                                                ).ToString("F0")%
                                    </h4>
                                    <small class="text-muted">Attendance Rate</small>
                                </div>
                            </div>
                        </div>

                        @if (AttendanceData.TimeStamp != default)
                                {
                                    <div class="mt-3 pt-3 border-top">
                                        <small class="text-muted">
                                            <i class="fa fa-clock me-1"></i>
                                            Recorded at @AttendanceData.TimeStamp.ToString("dd/MM/yyyy HH:mm")
                                            by @(AttendanceData.Teacher?.Person?.FirstName ?? "Unknown")
                                        </small>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="fa fa-calendar-times fa-3x text-muted mb-3"></i>
                        <h5 class="text-muted">No attendance records found</h5>
                        <p class="text-muted">No attendance has been taken for @SelectedDate.ToString("MMMM dd, yyyy")</p>
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" @onclick="Close">Close</button>
            </div>
        </div>
    </div>
</div>

@if (IsVisible)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public DateTime SelectedDate { get; set; } = DateTime.Today;
    [Parameter] public DailyAttendanceLogEntry AttendanceData { get; set; } = new();
    [Parameter] public EventCallback OnClose { get; set; }

    private async Task Close()
    {
        await OnClose.InvokeAsync();
    }
}
