@page "/payments"
@using FcmsPortal.Models
@using FcmsPortal.Enums
@using FcmsPortal.Services
@inject NavigationManager NavigationManager
@rendermode InteractiveServer


<h3>Payments</h3>

<div class="mb-3">
    <button class="btn btn-primary" @onclick="NavigateToCreate">Add New Payment</button>
</div>

@if (payments.Count == 0)
{
    <p>No payments found.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Amount</th>
                <th>Date</th>
                <th>Payment Method</th>
                <th>Reference</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var payment in payments)
            {
                <tr>
                    <td>@payment.Id</td>
                    <td>@payment.Amount.ToString("C")</td>
                    <td>@payment.Date.ToShortDateString()</td>
                    <td>@payment.PaymentMethod</td>
                    <td>@payment.Reference</td>
                    <td>
                        <button class="btn btn-info btn-sm" @onclick="() => NavigateToDetails(payment.Id)">Details</button>
                        <button class="btn btn-warning btn-sm" @onclick="() => NavigateToEdit(payment.Id)">Edit</button>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeletePayment(payment.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Payment> payments = new List<Payment>();

    protected override void OnInitialized()
    {
        // Load my real data here
        if (payments.Count == 0)
        {
            payments.Add(new Payment
                {
                    Id = 1,
                    Amount = 500.00,
                    Date = DateTime.Now.AddDays(-30),
                    PaymentMethod = PaymentMethod.BankTransfer,
                    Reference = 12345
                });

            payments.Add(new Payment
                {
                    Id = 2,
                    Amount = 750.00,
                    Date = DateTime.Now.AddDays(-15),
                    PaymentMethod = PaymentMethod.Card,
                    Reference = 23456
                });
        }
    }

    private void NavigateToCreate()
    {
        NavigationManager.NavigateTo("/payments/create");
    }

    private void NavigateToDetails(int id)
    {
        NavigationManager.NavigateTo($"/payments/details/{id}");
    }

    private void NavigateToEdit(int id)
    {
        NavigationManager.NavigateTo($"/payments/edit/{id}");
    }

    private void DeletePayment(int id)
    {
        var payment = payments.FirstOrDefault(p => p.Id == id);
        if (payment != null)
        {
            payments.Remove(payment);
        }
    }
}