@page "/payments/edit/{Id:int}"
@using FcmsPortal.Models
@using FcmsPortal.Enums
@using FcmsPortal.Services
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Edit Payment</h3>

@if (payment == null)
{
    <p>Loading...</p>
}
else
{
    <div class="row">
        <div class="col-md-6">
            <EditForm Model="@payment" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group mb-3">
                    <label for="id">ID:</label>
                    <InputNumber id="id" @bind-Value="payment.Id" class="form-control" disabled />
                </div>

                <div class="form-group mb-3">
                    <label for="amount">Amount:</label>
                    <InputNumber id="amount" @bind-Value="payment.Amount" class="form-control" />
                </div>

                <div class="form-group mb-3">
                    <label for="date">Date:</label>
                    <InputDate id="date" @bind-Value="payment.Date" class="form-control" />
                </div>

                <div class="form-group mb-3">
                    <label for="paymentMethod">Payment Method:</label>
                    <InputSelect id="paymentMethod" @bind-Value="payment.PaymentMethod" class="form-control">
                        @foreach (var method in Enum.GetValues(typeof(PaymentMethod)))
                        {
                            <option value="@method">@method</option>
                        }
                    </InputSelect>
                </div>

                <div class="form-group mb-3">
                    <label for="reference">Reference:</label>
                    <InputNumber id="reference" @bind-Value="payment.Reference" class="form-control" />
                </div>

                <button type="submit" class="btn btn-primary">Save</button>
                <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
            </EditForm>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Payment payment;

    protected override void OnInitialized()
    {
        payment = PaymentService.GetPayment(Id);

        if (payment == null)
        {
            NavigationManager.NavigateTo("/payments");
        }
    }

    private void HandleValidSubmit()
    {
        PaymentService.UpdatePayment(payment);

        NavigationManager.NavigateTo("/payments");
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/payments");
    }
}