@page "/students"
@inject ISchoolDataService SchoolDataService
@using FcmsPortal.Services
@using FcmsPortal.Models
@using FcmsPortal.Enums
@using FcmsPortalUI.Services
@using FcmsPortalUI.Components.Pages.Shared
@rendermode InteractiveServer

<PageTitle>Students</PageTitle>

<div class="container">
    <h1>Students Management</h1>

    <div class="mb-3">
        <a href="/students/create" class="btn btn-primary">
            <i class="fa fa-plus"></i> Add New Student
        </a>
    </div>

    @if (students == null)
    {
        <p><em>Loading...</em></p>
    }
    else if (!students.Any())
    {
        <div class="alert alert-info">
            No students found. Add a new student to get started.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Profile</th>
                        <th>Name</th>
                        <th>Age</th>
                        <th>Education Level</th>
                        <th>Class Level</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var student in students)
                    {
                        <tr>
                            <td>@student.Id</td>
                            <td>
                                @if (!string.IsNullOrEmpty(student.Person.ProfilePictureUrl))
                                {
                                    <ProfileThumbnailList Person="student.Person" />                               
                                }
                                
                            </td>
                            <td>@Util.GetFullName(student.Person)</td>
                            <td>@student.Person.Age</td>
                            <td>@student.Person.EducationLevel</td>
                            <td>@student.Person.ClassLevel</td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a href="/students/details/@student.Id" class="btn btn-info btn-sm">
                                        <i class="fa fa-eye"></i> View
                                    </a>
                                    <a href="/students/edit/@student.Id" class="btn btn-warning btn-sm">
                                        <i class="fa fa-pencil"></i> Edit
                                    </a>
                                    <button class="btn btn-danger btn-sm" @onclick="() => DeleteStudent(student.Id)">
                                        <i class="fa fa-trash"></i> Delete
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@code {
    private IEnumerable<Student> students;

    protected override async Task OnInitializedAsync()
    {
        students = SchoolDataService.GetStudents();
       
    }



    private async Task DeleteStudent(int studentId)
    {
        var result = await SchoolDataService.DeleteStudent(studentId, isHardDelete: true);
        if (result)
        {
            students = SchoolDataService.GetStudents();
        }
    }
}