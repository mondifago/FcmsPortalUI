@page "/archive/students"
@using FcmsPortal.Models
@using FcmsPortal.Services
@inject ISchoolDataService SchoolDataService
@rendermode InteractiveServer

<PageTitle>Archived Students</PageTitle>

<div class="container-fluid mt-3">
    <div class="row mb-4">
        <div class="col">
            <div class="d-flex justify-content-between align-items-center">
                <h1><i class="fa fa-archive"></i> Archived Students (Graduates)</h1>
            </div>
        </div>
    </div>

    @if (archivedStudents.Any())
    {
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Total Archived Students: @archivedStudents.Count</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Student Name</th>
                                <th>Education Level</th>
                                <th>Class Level</th>
                                <th>Archived Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var student in archivedStudents)
                            {
                                <tr>
                                    <td>@student.Person.FirstName @student.Person.LastName</td>
                                    <td>@student.Person.EducationLevel</td>
                                    <td>@student.Person.ClassLevel</td>
                                    <td>@(student.ArchivedDate?.ToString("MMM dd, yyyy") ?? "Unknown")</td>
                                    <td>
                                        <div class="btn-group btn-group-sm">
                                            <button class="btn btn-outline-primary" @onclick="() => ViewStudentDetails(student)">
                                                <i class="fa fa-eye"></i> View Details
                                            </button>
                                            <button class="btn btn-outline-warning" @onclick="() => RestoreStudent(student)">
                                                <i class="fa fa-undo"></i> Restore
                                            </button>
                                            <button class="btn btn-outline-success" @onclick="() => GenerateCertificate(student)">
                                                <i class="fa fa-certificate"></i> Certificate
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-body text-center">
                <i class="fa fa-archive file-icon-large text-muted"></i>
                <h4 class="mt-3">No Archived Students</h4>
                <p class="text-muted">Students who graduate from Senior College 3 (SSS3) will appear here.</p>
            </div>
        </div>
    }
</div>

@code {
    private List<Student> archivedStudents = new();

    protected override void OnInitialized()
    {
        LoadArchivedStudents();
    }

    private void LoadArchivedStudents()
    {
        archivedStudents = SchoolDataService.GetArchivedStudents();
    }

    private void ViewStudentDetails(Student student)
    {
        // TODO: Implement archived student details view
        // This could show academic history, grades, graduation details, etc.
    }

    private void RestoreStudent(Student student)
    {
        // TODO: Add confirmation dialog
        SchoolDataService.RestoreStudentFromArchive(student.Id);
        LoadArchivedStudents();
        StateHasChanged();
    }

    private void GenerateCertificate(Student student)
    {
        // TODO: Implement graduation certificate generation
        // This would generate a PDF certificate for the graduated student
    }
}
