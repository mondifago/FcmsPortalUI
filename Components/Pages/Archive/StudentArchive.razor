@page "/archive/students"
@using FcmsPortal.Models
@using FcmsPortal.Services
@using FcmsPortal.Enums
@using FcmsPortalUI.Components.Pages.Shared
@inject ISchoolDataService SchoolDataService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Archived Students</PageTitle>

<div class="container-fluid mt-3">
    <div class="row mb-4">
        <div class="col">
            <div class="d-flex justify-content-between align-items-center">
                <h1><i class="fa fa-archive"></i> Archived Students </h1>
                <a href="/archive" class="btn btn-secondary">
                    <i class="fa fa-arrow-left"></i> Back
                </a>

            </div>
        </div>
    </div>

    @if (archivedStudents.Any())
    {
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0">Total Archived Students: @archivedStudents.Count</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Student Name</th>
                                <th>Education Level</th>
                                <th>Class Level</th>
                                <th>Archived Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var student in archivedStudents)
                            {
                                <tr>
                                    <td>@student.Person.FirstName @student.Person.LastName</td>
                                    <td>@student.Person.EducationLevel</td>
                                    <td>@student.Person.ClassLevel</td>
                                    <td>@(student.ArchivedDate?.ToString("MMM dd, yyyy") ?? "Unknown")</td>
                                    <td>
                                        <div class="btn-group btn-group-sm">
                                            <button class="btn btn-outline-primary" @onclick="() => NavigateToTestimonial(student)">
                                                 Testimonial
                                            </button>
                                            <button class="btn btn-outline-success" @onclick="() => ShowFinalResult(student)">
                                                 Final Result
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-body text-center">
                <i class="fa fa-archive file-icon-large text-muted"></i>
                <h4 class="mt-3">No Archived Students</h4>
            </div>
        </div>
    }
</div>
<!-- Final Result Modal -->
@if (showReportCardModal && selectedStudent != null && ss3LearningPath != null)
{
    <StudentReportCardModal Student="selectedStudent"
                            LearningPath="ss3LearningPath"
                            IsVisible="showReportCardModal"
                            OnClose="CloseReportCardModal" />
}

@code {
    private List<Student> archivedStudents = new();
    private bool showReportCardModal = false;
    private Student? selectedStudent = null;
    private LearningPath? ss3LearningPath = null;

    protected override void OnInitialized()
    {
        LoadArchivedStudents();
    }

    private void LoadArchivedStudents()
    {
        archivedStudents = SchoolDataService.GetArchivedStudents();
    }

    private void NavigateToTestimonial(Student student)
    {
        NavigationManager.NavigateTo($"/testimonial/{student.Id}");
    }

    private void ShowFinalResult(Student student)
    {
        selectedStudent = student;

        ss3LearningPath = SchoolDataService.GetAllLearningPaths()
            .FirstOrDefault(lp =>
                lp.EducationLevel == EducationLevel.SeniorCollege &&
                lp.ClassLevel == ClassLevel.SC_3 &&
                lp.Semester == Semester.Third);

        if (ss3LearningPath != null)
        {
            showReportCardModal = true;
        }
    }

    private void CloseReportCardModal()
    {
        showReportCardModal = false;
        selectedStudent = null;
        ss3LearningPath = null;
    }
}